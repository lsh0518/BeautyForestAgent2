<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>